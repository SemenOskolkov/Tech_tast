'''
1. Реализуйте алгоритм, который принимает массив и перемещает нули в конец, сохраняя порядок остальных элементов
'''


def zero_sort(mass):
    size = len(mass)  # Устанавливаем размер массива через длину
    left = 0  # Присваиваем левому индексу массива 0
    right = 0  # Присваиваем правому индексу массива 0
    while right < size:  # Условие, пока правый индекс меньше длины массива
        if mass[right] == 0:  # Если правый индекс равен 0
            right += 1  # Добавляем 1 к правому индексу
        else:
            mass[left], mass[right] = mass[right], mass[left]  # В остальных случаях меняем значения по индексам местами
            left += 1  # Добавляем 1 к левому индексу
            right += 1  # # Добавляем 1 к правому индексу
    return mass  # Возвращаем отсортированный список, где 0 справа


list_num = [1, 6, 3, 0, 5, 0, 2, 8, 5, 0, 3, 2, 3, 0, 1]
print(zero_sort(mass=list_num))

'''
2. Посчитайте сумму н-го ряда пирамиды нечетных чисел (начало с 1)
#     1

#    3 5

#   7 9 11

#  13 15 17 19

#21 23 25 27 29

#...
'''


def sum_row(n):
    n_row = []  # Список чисел н-ого ряда
    prev_row = []  # Список нечетных чисел

    if n > 1:  # Условие 2-ого и н-ого рядов
        for i in range(1, n * (n - 1), 2):  # Формируем пирамиду из нечетных чисел
            prev_row.append(i)

        for i in range(prev_row[-1] + 2, prev_row[-1] + (n * 2) + 2, 2):  # Формируем список чисел н-ого ряда
            n_row.append(i)
    elif n == 1:  # Условие для вершины пирамиды
        n_row.append(n)
    else:
        print('Пирамида из нечетных чисел начинается с 1')  # Вывод текста согласно по условию

    return sum(n_row)  # Возвращает сумму н-го ряда пирамиды нечетных чисел


number_row = int(input('Введите номер ряда'))
print(sum_row(n=number_row))
